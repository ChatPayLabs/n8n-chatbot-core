-- SERVICE

create table public.sys_service (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  service_no text not null,
  full_service_no text null,
  channel_no text not null,
  name text not null,
  is_active boolean null default true,
  ai_name text null,
  ai_role text null,
  ai_rules text null,
  country text null,
  currency text null,
  timezone text null,
  constraint sys_service_pkey primary key (id),
  constraint sys_service_full_service_no_key unique (full_service_no),
  constraint sys_service_channel_no_fkey foreign KEY (channel_no) references sys_channel (channel_no) on update CASCADE
) TABLESPACE pg_default;

-- FUNCTION on_sys_service_insert
drop function if exists public.on_sys_service_insert cascade;

create function public.on_sys_service_insert () returns trigger
set
  search_path = '' as $$ -- PRIVATE FUNCTION
declare
  _sys_channel public.sys_channel;
begin
  -- find channel
  SELECT * FROM public.sys_channel WHERE channel_no = new.channel_no INTO _sys_channel;

  -- override
  new.country = _sys_channel.country;
  new.currency = _sys_channel.currency;
  new.timezone = _sys_channel.timezone;

  new.full_service_no := new.channel_no || ':' || new.service_no;

return new;
end;
$$ language plpgsql security definer;

create trigger on_sys_service_insert before insert on sys_service for each row
execute function on_sys_service_insert ();
